<Activity mc:Ignorable="sap sap2010" x:Class="Worksheet_RemoveHyperlinks" this:Worksheet_RemoveHyperlinks.CultureName="jp-JP" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="WorkbookPath" Type="InArgument(x:String)" />
    <x:Property Name="CultureName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2044,929</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Worksheet_RemoveHyperlinks_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>ClosedXML.Excel</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Shared.Contracts</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Services</x:String>
      <x:String>UiPath.Shared.Activities.Services.Interfaces</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Shared.Activities.Bindings</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Shared.Activities.Triggers</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Properties</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>ClosedXML</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This code dynamically constructs a number format pattern based on the cultural conventions for currency formatting. It handles exceptional cases where the standard pattern might not be suitable for certain cultures with unique formatting conventions, such as currencies without decimal places. The constructed pattern is then applied to cells in an Excel workbook to format numbers as currency values according to the specified culture.&#xD;&#xA;&#xD;&#xA;1. Add path to your workbook in WorkbookPath in-argument &#xA;2. Set specific culture name as per xx-XX convention in the in-argument&#xA;" DisplayName="Workbook_SetSpecificCultureFormatting" sap:VirtualizedContainerService.HintSize="512,864" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Workbook_SetSpecificCultureFormatting: START&quot;]" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="' Get the CultureInfo object&#xD;&#xA;Dim culture As CultureInfo = New CultureInfo(cultureName)&#xD;&#xA;&#xD;&#xA;' Get the NumberFormatInfo object for the specified culture&#xD;&#xA;Dim numberFormatInfo As NumberFormatInfo = culture.NumberFormat&#xD;&#xA;&#xD;&#xA;' Construct the number format pattern dynamically&#xD;&#xA;Dim numberFormatPattern As String&#xD;&#xA;&#xD;&#xA;' Check if the currency symbol has a fixed number of decimal places&#xD;&#xA;If numberFormatInfo.CurrencyDecimalDigits = 0 Then&#xD;&#xA;    ' For currencies without decimals, such as Japanese Yen (JPY)&#xD;&#xA;    numberFormatPattern = $&quot;{numberFormatInfo.CurrencySymbol}#,##0&quot;&#xD;&#xA;Else&#xD;&#xA;    ' For other currencies with decimals&#xD;&#xA;    numberFormatPattern = $&quot;{numberFormatInfo.CurrencySymbol}#,##0.00&quot;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;' Load the Excel file&#xD;&#xA;Using workbook As New ClosedXML.Excel.XLWorkbook(excelFilePath)&#xD;&#xA;    ' Loop through each worksheet&#xD;&#xA;    For Each worksheet As IXLWorksheet In workbook.Worksheets&#xD;&#xA;        ' Loop through each cell in the worksheet&#xD;&#xA;        For Each cell As IXLCell In worksheet.CellsUsed()&#xD;&#xA;            ' Set the date format based on the culture&#xD;&#xA;            cell.Style.DateFormat.Format = culture.DateTimeFormat.ShortDatePattern&#xD;&#xA;            &#xD;&#xA;            ' Set the number format based on the culture&#xD;&#xA;            cell.Style.NumberFormat.Format = numberFormatPattern&#xD;&#xA;        Next&#xD;&#xA;    Next&#xD;&#xA;&#xD;&#xA;    ' Save the changes&#xD;&#xA;    workbook.Save()&#xD;&#xA;End Using" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="450,277" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="excelFilePath">[WorkbookPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="cultureName">[CultureName]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,164" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Workbook_SetSpecificCultureFormatting: END&quot;]" />
  </Sequence>
</Activity>